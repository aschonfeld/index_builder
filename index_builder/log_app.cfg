#This defines the logger(s) which are available; there are sections below called "logger_root", etc
[loggers]
keys=root



# This defines the handlers available; there are sections below called "handler_console", etc
# "handler" instances would be "the console", or "a file" ...
[handlers]
#keys=console,file,rotating_file
keys=console

# This defines the formatters available; there are sections below called "formatter_console", etc
[formatters]
keys=console,file

#-------------------------

#This defines the configuration of root logger, which will be established when ahl.logging is imported
[logger_root]
# This defines the default logging level for the root logger
level=INFO
# This defines the handlers available to the root logger
handlers=console
#handlers=console, rotating_file

#http://docs.python.org/release/2.6/library/logging.html#streamhandler
[handler_console]
class=StreamHandler
level=NOTSET
# This defines the formatter (see "formatter_console" section below)
formatter=console
args=(sys.stderr,)

#http://docs.python.org/release/2.6/library/logging.html#timedrotatingfilehandler
[handler_rotating_file]
class=logging.handlers.TimedRotatingFileHandler
level=NOTSET
formatter=file
args=('~/rotating.log','D')
mkdirs=0 # set to 1 or True if you want the log directory tree to be created if it does not exist


#http://docs.python.org/release/2.6/library/logging.html#filehandler
[handler_file]
class=FileHandler
level=NOTSET
formatter=file
args=('~/python.log','w')
mkdirs=0 # set to 1 or True if you want the log directory tree to be created if it does not exist

#http://docs.python.org/release/2.6/library/logging.html#id1
[formatter_console]
#format=(%(levelname)s) %(message)s
format=%(asctime)s %(levelname)-5.5s %(message)s
datefmt=

[formatter_file]
format=%(asctime)s %(levelname)-5.5s [%(name)s] [%(threadName)s %(thread)d] %(module)s.%(funcName)s <%(lineno)d> - %(message)s
datefmt=
